// Color variables
$red: #EE3D42;
$dark-gray: #5A5B5D;
$mid-gray: #A2A2A2;
$gray: #E3E4E5;
$black: #000000;
$white: #FFFFFF;

// Import Roboto from Google Fonts
@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

// Font family Tofino - all weights and styles
@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-ThinPersonal.otf') format('opentype');
  font-weight: 100;
  font-style: normal;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-ThinItalicPersonal.otf') format('opentype');
  font-weight: 100;
  font-style: italic;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-LightPersonal.otf') format('opentype');
  font-weight: 300;
  font-style: normal;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-LightItalicPersonal.otf') format('opentype');
  font-weight: 300;
  font-style: italic;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-BookPersonal.otf') format('opentype');
  font-weight: 350;
  font-style: normal;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-BookItalicPersonal.otf') format('opentype');
  font-weight: 350;
  font-style: italic;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-RegularPersonal.otf') format('opentype');
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-RegularItalicPersonal.otf') format('opentype');
  font-weight: 400;
  font-style: italic;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-MediumPersonal.otf') format('opentype');
  font-weight: 500;
  font-style: normal;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-MediumItalicPersonal.otf') format('opentype');
  font-weight: 500;
  font-style: italic;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-SemiboldPersonal.otf') format('opentype');
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-SemiboldItalicPersonal.otf') format('opentype');
  font-weight: 600;
  font-style: italic;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-BoldPersonal.otf') format('opentype');
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-BoldItalicPersonal.otf') format('opentype');
  font-weight: 700;
  font-style: italic;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-BlackPersonal.otf') format('opentype');
  font-weight: 900;
  font-style: normal;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-BlackItalicPersonal.otf') format('opentype');
  font-weight: 900;
  font-style: italic;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-UltraPersonal.otf') format('opentype');
  font-weight: 950;
  font-style: normal;
}

@font-face {
  font-family: 'Tofino';
  src: url('../assets/fonts/Tofino-UltraItalicPersonal.otf') format('opentype');
  font-weight: 950;
  font-style: italic;
}

@function ptr($px-value) {
  @return #{$px-value / 32}rem;
}

// Alternative function with a more explicit base
@function ptr-alt($px-value, $base-px: 32) {
  @return #{$px-value / $base-px}rem;
}

// Mixin for easy usage
@mixin ptr($property, $px-value) {
  #{$property}: ptr($px-value);
}

@mixin decor-font($font-size: ptr(30)) {
  font-family: 'Tofino', sans-serif;
  font-size: $font-size;
  line-height: 1.4;
  text-transform: uppercase;
  letter-spacing: calc($font-size * 0.15);
  font-weight: 440;
}

@mixin decor-medal() {
  background-image: url('data:image/svg+xml,<svg width="142" height="147" viewBox="0 0 142 147" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M71.0003 97.75C58.4025 97.75 46.3207 92.7456 37.4128 83.8376C28.5048 74.9296 23.5003 62.8478 23.5003 50.25C23.5003 37.6522 28.5048 25.5704 37.4128 16.6624C46.3207 7.75445 58.4025 2.75 71.0003 2.75C83.5981 2.75 95.6799 7.75445 104.588 16.6624C113.496 25.5704 118.5 37.6522 118.5 50.25C118.5 62.8478 113.496 74.9296 104.588 83.8376C95.6799 92.7456 83.5981 97.75 71.0003 97.75ZM71.0003 97.75L97.917 144.379L110.568 118.785L139.052 120.621L112.135 74M29.8522 74L2.93555 120.629L31.4197 118.785L44.0705 144.371L70.9872 97.75" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

@mixin back-button() {
  background-image: url('data:image/svg+xml,<svg width="36" height="28" viewBox="0 0 36 28" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10.7503 18.1667L2.41699 9.83333M2.41699 9.83333L10.7503 1.5M2.41699 9.83333H25.3337C27.5438 9.83333 29.6634 10.7113 31.2262 12.2741C32.789 13.8369 33.667 15.9565 33.667 18.1667C33.667 20.3768 32.789 22.4964 31.2262 24.0592C29.6634 25.622 27.5438 26.5 25.3337 26.5H23.2503" stroke="white" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/></svg>');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

@mixin open-button() {
  background-image: url('data:image/svg+xml,<svg width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12.7497 2.33398V35.6673M23.1663 14.834L27.333 19.0007L23.1663 23.1673M2.33301 6.50065C2.33301 5.39558 2.77199 4.33577 3.5534 3.55437C4.3348 2.77297 5.39461 2.33398 6.49967 2.33398H31.4997C32.6047 2.33398 33.6645 2.77297 34.446 3.55437C35.2274 4.33577 35.6663 5.39558 35.6663 6.50065V31.5006C35.6663 32.6057 35.2274 33.6655 34.446 34.4469C33.6645 35.2283 32.6047 35.6673 31.4997 35.6673H6.49967C5.39461 35.6673 4.3348 35.2283 3.5534 34.4469C2.77199 33.6655 2.33301 32.6057 2.33301 31.5006V6.50065Z" stroke="white" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/></svg>');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

@mixin drag() {
  background-image: url('data:image/svg+xml,<svg width="32" height="17" viewBox="0 0 32 17" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 2.875C1 3.37228 1.19754 3.84919 1.54918 4.20082C1.90081 4.55246 2.37772 4.75 2.875 4.75C3.37228 4.75 3.84919 4.55246 4.20082 4.20082C4.55246 3.84919 4.75 3.37228 4.75 2.875C4.75 2.37772 4.55246 1.90081 4.20082 1.54918C3.84919 1.19754 3.37228 1 2.875 1C2.37772 1 1.90081 1.19754 1.54918 1.54918C1.19754 1.90081 1 2.37772 1 2.875Z" fill="white"/><path d="M1 14.125C1 14.6223 1.19754 15.0992 1.54918 15.4508C1.90081 15.8025 2.37772 16 2.875 16C3.37228 16 3.84919 15.8025 4.20082 15.4508C4.55246 15.0992 4.75 14.6223 4.75 14.125C4.75 13.6277 4.55246 13.1508 4.20082 12.7992C3.84919 12.4475 3.37228 12.25 2.875 12.25C2.37772 12.25 1.90081 12.4475 1.54918 12.7992C1.19754 13.1508 1 13.6277 1 14.125Z" fill="white"/><path d="M14.125 2.875C14.125 3.37228 14.3225 3.84919 14.6742 4.20082C15.0258 4.55246 15.5027 4.75 16 4.75C16.4973 4.75 16.9742 4.55246 17.3258 4.20082C17.6775 3.84919 17.875 3.37228 17.875 2.875C17.875 2.37772 17.6775 1.90081 17.3258 1.54918C16.9742 1.19754 16.4973 1 16 1C15.5027 1 15.0258 1.19754 14.6742 1.54918C14.3225 1.90081 14.125 2.37772 14.125 2.875Z" fill="white"/><path d="M14.125 14.125C14.125 14.6223 14.3225 15.0992 14.6742 15.4508C15.0258 15.8025 15.5027 16 16 16C16.4973 16 16.9742 15.8025 17.3258 15.4508C17.6775 15.0992 17.875 14.6223 17.875 14.125C17.875 13.6277 17.6775 13.1508 17.3258 12.7992C16.9742 12.4475 16.4973 12.25 16 12.25C15.5027 12.25 15.0258 12.4475 14.6742 12.7992C14.3225 13.1508 14.125 13.6277 14.125 14.125Z" fill="white"/><path d="M27.25 2.875C27.25 3.37228 27.4475 3.84919 27.7992 4.20082C28.1508 4.55246 28.6277 4.75 29.125 4.75C29.6223 4.75 30.0992 4.55246 30.4508 4.20082C30.8025 3.84919 31 3.37228 31 2.875C31 2.37772 30.8025 1.90081 30.4508 1.54918C30.0992 1.19754 29.6223 1 29.125 1C28.6277 1 28.1508 1.19754 27.7992 1.54918C27.4475 1.90081 27.25 2.37772 27.25 2.875Z" fill="white"/><path d="M27.25 14.125C27.25 14.6223 27.4475 15.0992 27.7992 15.4508C28.1508 15.8025 28.6277 16 29.125 16C29.6223 16 30.0992 15.8025 30.4508 15.4508C30.8025 15.0992 31 14.6223 31 14.125C31 13.6277 30.8025 13.1508 30.4508 12.7992C30.0992 12.4475 29.6223 12.25 29.125 12.25C28.6277 12.25 28.1508 12.4475 27.7992 12.7992C27.4475 13.1508 27.25 13.6277 27.25 14.125Z" fill="white"/><path d="M1 2.875C1 3.37228 1.19754 3.84919 1.54918 4.20082C1.90081 4.55246 2.37772 4.75 2.875 4.75C3.37228 4.75 3.84919 4.55246 4.20082 4.20082C4.55246 3.84919 4.75 3.37228 4.75 2.875C4.75 2.37772 4.55246 1.90081 4.20082 1.54918C3.84919 1.19754 3.37228 1 2.875 1C2.37772 1 1.90081 1.19754 1.54918 1.54918C1.19754 1.90081 1 2.37772 1 2.875Z" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M1 14.125C1 14.6223 1.19754 15.0992 1.54918 15.4508C1.90081 15.8025 2.37772 16 2.875 16C3.37228 16 3.84919 15.8025 4.20082 15.4508C4.55246 15.0992 4.75 14.6223 4.75 14.125C4.75 13.6277 4.55246 13.1508 4.20082 12.7992C3.84919 12.4475 3.37228 12.25 2.875 12.25C2.37772 12.25 1.90081 12.4475 1.54918 12.7992C1.19754 13.1508 1 13.6277 1 14.125Z" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M14.125 2.875C14.125 3.37228 14.3225 3.84919 14.6742 4.20082C15.0258 4.55246 15.5027 4.75 16 4.75C16.4973 4.75 16.9742 4.55246 17.3258 4.20082C17.6775 3.84919 17.875 3.37228 17.875 2.875C17.875 2.37772 17.6775 1.90081 17.3258 1.54918C16.9742 1.19754 16.4973 1 16 1C15.5027 1 15.0258 1.19754 14.6742 1.54918C14.3225 1.90081 14.125 2.37772 14.125 2.875Z" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M14.125 14.125C14.125 14.6223 14.3225 15.0992 14.6742 15.4508C15.0258 15.8025 15.5027 16 16 16C16.4973 16 16.9742 15.8025 17.3258 15.4508C17.6775 15.0992 17.875 14.6223 17.875 14.125C17.875 13.6277 17.6775 13.1508 17.3258 12.7992C16.9742 12.4475 16.4973 12.25 16 12.25C15.5027 12.25 15.0258 12.4475 14.6742 12.7992C14.3225 13.1508 14.125 13.6277 14.125 14.125Z" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M27.25 2.875C27.25 3.37228 27.4475 3.84919 27.7992 4.20082C28.1508 4.55246 28.6277 4.75 29.125 4.75C29.6223 4.75 30.0992 4.55246 30.4508 4.20082C30.8025 3.84919 31 3.37228 31 2.875C31 2.37772 30.8025 1.90081 30.4508 1.54918C30.0992 1.19754 29.6223 1 29.125 1C28.6277 1 28.1508 1.19754 27.7992 1.54918C27.4475 1.90081 27.25 2.37772 27.25 2.875Z" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M27.25 14.125C27.25 14.6223 27.4475 15.0992 27.7992 15.4508C28.1508 15.8025 28.6277 16 29.125 16C29.6223 16 30.0992 15.8025 30.4508 15.4508C30.8025 15.0992 31 14.6223 31 14.125C31 13.6277 30.8025 13.1508 30.4508 12.7992C30.0992 12.4475 29.6223 12.25 29.125 12.25C28.6277 12.25 28.1508 12.4475 27.7992 12.7992C27.4475 13.1508 27.25 13.6277 27.25 14.125Z" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}
  

@mixin timeline-story(
  $img: (width: null, height: null, top: null, left: null, shadow: null),
  $img2: (width: null, height: null, top: null, left: null),
  $year: (left: null, top: null),
  $text: (width: null, left: null, top: null),
  $bar: (left: null, height: null, top: null),
  $caption: none,
  $before: (width: null, height: null, top: null, left: null),
  $after: (width: null, left: null),
) {
  display: grid;
  position: relative;

  // if before is defined
  @if map-get($before, width) {
    &:before {
      content: "";
      position: absolute;
      width: ptr(map-get($before, width));
      height: ptr(map-get($before, height));
      top: ptr(map-get($before, top));
      left: ptr(map-get($before, left));
      background-color: $red;
      mix-blend-mode: multiply;
    }
  }

  // if after is defined
  @if map-get($after, width) {
    &:after {
      content: "";
      position: absolute;
      width: ptr(map-get($after, width));
      height: 100vh;
      top: 0;
      z-index: -1;
      left: ptr(map-get($after, left));
      background: linear-gradient(218deg, #DADADA -1.74%, #FFF 85.38%);
    }
  }

  .img1 {
    position: absolute;
    @if map-get($img, width) { width: ptr(map-get($img, width)); }
    @if map-get($img, height) { height: ptr(map-get($img, height)); }
    @if map-get($img, top) { top: ptr(map-get($img, top)); }
    @if map-get($img, left) { left: ptr(map-get($img, left)); }
    // if shadow is defined
    @if map-get($img, shadow) {
      box-shadow: 0 ptr(11) ptr(90) rgba($black, 0.55);
      background: radial-gradient(circle at center, rgba($black, 0) 0%, rgba($black, 0.4) 100%);
    }
  }

  .img2 {
    position: absolute;
    @if map-get($img2, width) { width: ptr(map-get($img2, width)); }
    @if map-get($img2, height) { height: ptr(map-get($img2, height)); }
    @if map-get($img2, top) { top: ptr(map-get($img2, top)); }
    @if map-get($img2, left) { left: ptr(map-get($img2, left)); }
    // display none if unset
    @if not map-get($img2, width) { display: none; }
  }

  .year {
    position: absolute;
    @if map-get($year, left) { left: ptr(map-get($year, left)); }
    @if map-get($year, top) { top: ptr(map-get($year, top)); }
  }

  .text {
    position: absolute;
    @if map-get($text, width) { width: ptr(map-get($text, width)); }
    @if map-get($text, left) { left: ptr(map-get($text, left)); }
    @if map-get($text, top) { top: ptr(map-get($text, top)); }
  }

  .bar {
    position: absolute;
    @if map-get($bar, left) { left: ptr(map-get($bar, left)); }
    @if map-get($bar, height) { height: ptr(map-get($bar, height)); }
    @if map-get($bar, top) { top: ptr(map-get($bar, top)); }
    width: ptr(2);
    background-color: $red;

    // if bar top == 1034
    // if bar defined
    @if map-get($bar, height) {
      &:after {
        content: "";
        position: absolute;
        height: ptr(19);
        width: ptr(19);
        background-color: $red;
        @if map-get($bar, top) == 1034 {
          top: 0;
          transform: translate(-50%, -50%);
        } @else {
          bottom: 0;
          transform: translate(-50%, 50%);
        }
          left: 50%;
          border-radius: 50%;
        }
    } else {
      display: none;
    }
  }

  .caption {
    display: $caption;
  }
}
